* Cryptography
:PROPERTIES:
:ID:       3cb89927-649c-4439-872c-00d7971cba42
:CATEGORY: crypto
:AKA: crypto
:END:
** [[https://tools.ietf.org/html/rfc8439][RFC 8439 - ChaCha20 and Poly1305 for IETF Protocols]]
	 :PROPERTIES:
	 :CREATED:  [2021-02-13 Sat 03:07]
	 :ID:       org:395390b0-f920-4e6e-8a1a-21743538036d
	 :END:
** [[https://en.wikipedia.org/wiki/Salsa20#ChaCha_variant][Salsa20 - Wikipedia]]
	 :PROPERTIES:
	 :CREATED:  [2021-02-13 Sat 02:59]
	 :ID:       org:f81e6d23-1196-4277-9fac-46ff07ab7c07
	 :END:
	 - ChaCha variant - most common stream cipher nowadays.
** [[https://en.wikipedia.org/wiki/Stream_cipher][Stream cipher - Wikipedia]]
	 :PROPERTIES:
	 :CREATED:  [2021-02-13 Sat 02:48]
	 :ID:       org:28828afb-9e9b-4b64-a958-2d8bd72dd559
	 :END:
** [[https://dalek.rs/][dalek cryptography]]
	 :PROPERTIES:
	 :CREATED:  [2021-02-13 Sat 02:28]
	 :ID:       org:b08792ce-1926-49fe-9975-786294d90d73
	 :END:
	 love this site design
** [[https://en.wikipedia.org/wiki/Public_key_infrastructure][Public Key Infrastructure - Wikipedia]]
CREATED: [2021-01-22 Fri 04:20]
#+CAPTION: PKI
#+ATTR_HTML: :alt PKI image
[[https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Public-Key-Infrastructure.svg/450px-Public-Key-Infrastructure.svg.png]]
** [[https://developer.okta.com/blog/2019/10/23/dangers-of-self-signed-certs][The Dangers of Self-Signed Certificates | Okta Developer]]
CREATED: [2020-08-05 Wed 18:27]
** [[https://tools.ietf.org/html/rfc7748][RFC 7748 - Elliptic Curves for Security]]
CREATED: [2020-08-01 Sat 00:04]
defines some familiar elliptical curves for practical security,
including in TLS. They work at ~128-bit and ~224-bit security levels.
** [[https://tools.ietf.org/html/rfc5116][RFC 5116 - An Interface and Algorithms for Authenticated Encryption]]
CREATED: [2020-08-01 Sat 16:55]
AEAD descriptions - we're usually going for a form of this approach
with MAC+Encrypt
** [[https://tools.ietf.org/html/rfc2104][RFC 2104 - HMAC: Keyed-Hashing for Message Authentication]]
CREATED: [2020-07-31 Fri 23:52]
HMAC - often used with MD5, SHA-1, etc, plus a secret shared key.
Key Hashing
** [[https://letsencrypt.org/2018/04/04/sct-encoding.html][Engineering deep dive: Encoding of SCTs in certificates - Let's Encrypt - Free SSL/TLS Certificates]]
	 :PROPERTIES:
	 :CREATED:  [2020-07-14 Tue]
	 :END:
