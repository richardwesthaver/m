#+title: Conky
#+ID: ee68a953-f9b3-447d-a531-ef301ca1e0d9
[[https://github.com/brndnmtthws/conky][Conky]] is a lightweight system monitor program for X that generates nice little desktop
widgets from Lua config files.
- Built with C++.
- [[https://wiki.archlinux.org/title/conky][Conky - ArchWiki]]
- [[https://github.com/brndnmtthws/conky][GitHub - brndnmtthws/conky: Light-weight system monitor for X.]]
* Arch Linux desktop example
Here's a few widgets I set up - they stay on the desktop behind all my other windows, so
when I want to see some quick stats I can just switch to an empty tag in AwesomeWM
(which is also configured via Lua).

Using conky is very easy. It takes a few flags to run in the background smoothly and a
config file as input.

As a shell script:
#+begin_src shell
#!/bin/sh
conky -bdc ~/.config/conky/conky-l1.lua &
conky -bdc ~/.config/conky/conky-l2.lua &
#+end_src

Or in Rust:
#+begin_src rust
use cmd_lib::{run_cmd, CmdResult};

/// start conky service in background
#[cfg(unix)]
pub fn conky(cfg: &str) -> CmdResult {
  Ok(run_cmd!(conky  -qbdc "$cfg" '&')?)
}
#+end_src

- screenshot
  #+caption: conky desktop widgets
  #+attr_html: :width 600
  [[https://cdn.rwest.io/img/conky_desktop.png]]

Next thing I want to do is mess with [[https://github.com/varingst/awesome-conky][awesome-conky]] to get an idea of how to better
integrate with AwesomeWM, then make some better widgets. :)

- conky-l1.lua
  #+begin_src lua
conky.config = {
    alignment = 'top_left',
    own_window_colour = '0C272D',
    background = false,
    border_width = 2,
    cpu_avg_samples = 2,
    default_color = 'D6685E',
    default_outline_color = '7D4C4E',
    default_shade_color = 'B19B75',
    double_buffer = false,
    draw_borders = false,
    draw_graph_borders = false,
    draw_outline = false,
    draw_shades = true,
    extra_newline = false,
    font = 'DejaVu Sans Mono:size=12',
    minimum_width = 500,
    minimum_height = 5,
    gap_x = 4,
    gap_y = -4,
    net_avg_samples = 2,
    no_buffers = true,
    own_window_hints = 'undecorated,sticky,skip_taskbar,skip_pager',
    out_to_console = false,
    out_to_ncurses = false,
    out_to_stderr = false,
    out_to_x = true,
    own_window = true,
    own_window_type = 'desktop',
    show_graph_range = false,
    show_graph_scale = false,
    stippled_borders = 0,
    update_interval = 4.0,
    uppercase = false,
    use_spacer = 'none',
    use_xft = true,
}

conky.text = [[
$nodename $kernel $machine
$hr
${color B19B75}Uptime:$color $uptime
${color B19B75}RAM Usage:$color $mem/$memmax - $memperc%
${membar 8}
$hr
${color EAB0B1}File systems:
 / $color${fs_used /}/${fs_size /}
${fs_bar 6 /}
Networking:
${color EAB0B1}Up:$color ${upspeed} ${color EAB0B1} - Down:$color ${downspeed}

${color grey}Frequency (in MHz):$color $freq
${color grey}Frequency (in GHz):$color $freq_g
$hr
]]
  #+end_src
- conky-l2.lua
  #+begin_src lua
conky.config = {
    alignment = 'bottom_left',
    background = false,
    own_window_colour = '36313B',
    border_width = 2,
    cpu_avg_samples = 2,
    default_color = 'F9F2D3',
    default_outline_color = 'white',
    default_shade_color = '7D4C4E',
    double_buffer = false,
    draw_borders = false,
    draw_graph_borders = false,
    draw_outline = false,
    draw_shades = true,
    extra_newline = false,
    font = 'DejaVu Sans Mono:size=12',
    minimum_height = 5,
    gap_x = 4,
    gap_y = 00,
    own_window_hints = 'undecorated,sticky,skip_taskbar,skip_pager',
    minimum_width = 500,
    no_buffers = true,
    out_to_console = false,
    out_to_ncurses = false,
    out_to_stderr = false,
    out_to_x = true,
    own_window = true,
    own_window_type = 'desktop',
    show_graph_range = false,
    show_graph_scale = false,
    stippled_borders = 0,
    update_interval = 4.0,
    uppercase = false,
    use_spacer = 'none',
    use_xft = true,
}

conky.text = [[
${color grey}CPU Usage:$color $cpu%
${color pink}${cpubar 8}$color
$hr
${color grey}Processes:$color $processes  ${color grey}Running:$color $running_processes
$hr
Name              PID     CPU%   MEM%
${color lightgrey} ${top name 1} ${top pid 1} ${top cpu 1} ${top mem 1}
${color lightgrey} ${top name 2} ${top pid 2} ${top cpu 2} ${top mem 2}
${color lightgrey} ${top name 3} ${top pid 3} ${top cpu 3} ${top mem 3}
${color lightgrey} ${top name 4} ${top pid 4} ${top cpu 4} ${top mem 4}
${color lightgrey} ${top name 5} ${top pid 5} ${top cpu 5} ${top mem 5}
${color lightgrey} ${top name 6} ${top pid 6} ${top cpu 6} ${top mem 6}
${color lightgrey} ${top name 7} ${top pid 7} ${top cpu 7} ${top mem 7}
${color lightgrey} ${top name 8} ${top pid 8} ${top cpu 8} ${top mem 8}
$hr
]]
  #+end_src

